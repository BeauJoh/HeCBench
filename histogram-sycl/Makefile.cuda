CC        = clang++
OPTIMIZE  = yes
DEBUG     = no
CUDA_ARCH = "--cuda-gpu-arch=sm_35"
GCC_TOOLCHAIN = "/auto/software/gcc/x86_64/gcc-9.1.0/"



# Standard flags (profiling is enabled to measure device offloading time)
CFLAGS := -DUSE_GPU -std=c++14 -Wall -I../include \
          -fsycl -fsycl-targets=nvptx64-nvidia-cuda-sycldevice \
          -fsycl-unnamed-lambda \
          -Xsycl-target-backend $(CUDA_ARCH) \
          --gcc-toolchain=$(GCC_TOOLCHAIN)

# Linker flags
LDFLAGS = -lm

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g 
endif

# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

SRC = histogram_compare_base.cpp histogram_gmem_atomics.hpp histogram_smem_atomics.hpp test_util.hpp

EXE = histogram

$(EXE):$(SRC)
	$(CC) $(CFLAGS) $< -o $(EXE)  $(LDFLAGS) 

run: $(EXE)
	./$(EXE) 


clean: 
	rm -f $(EXE) $(EXE).linkinfo result*
