#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = clang++
OPTIMIZE  = yes
DEBUG     = no
DEVICE    = gpu

#===============================================================================
# Program name & source code list
#===============================================================================

program = minray

source = simulation.cpp \
         main.cpp \
         init.cpp \
         io.cpp \
         utils.cpp \
         rand.cpp 

obj = $(source:.cpp=.o)

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := -Wall 

# Linker Flags
LDFLAGS = 

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g
  LDFLAGS  += -g 
endif

# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

ifeq ($(DEVICE),gpu)
  CFLAGS += -target x86_64-pc-linux-gnu \
          -fopenmp -fopenmp-targets=amdgcn-amd-amdhsa \
          -Xopenmp-target=amdgcn-amd-amdhsa \
          -march=gfx906
else
  CFLAGS +=-fopenmp
endif
#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(obj)
	$(CC) $(CFLAGS) $(obj) -o $@ $(LDFLAGS)

simulation.o: simulation.cpp \
              add_source_to_scalar_flux_kernel.cpp \
              ray_trace_kernel.cpp \
              compute_cell_fission_rates_kernel.cpp \
              flux_attenuation_kernel.cpp \
              normalize_scalar_flux_kernel.cpp \
              update_isotropic_sources_kernel.cpp \
              minray.h parameters.h
	$(CC) $(CFLAGS) -c $< -o $@

main.o : main.cpp minray.h parameters.h
	$(CC) $(CFLAGS) -c $< -o $@

init.o : init.cpp minray.h parameters.h
	$(CC) $(CFLAGS) -c $< -o $@

io.o : io.cpp minray.h parameters.h
	$(CC) $(CFLAGS) -c $< -o $@

utils.o : utils.cpp minray.h 
	$(CC) $(CFLAGS) -c $< -o $@

rand.o : rand.cpp 
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(program) $(obj)

run: $(program)
	#./$(program) -s 2 -v small
	./$(program) -s 2 -v medium
	#./$(program) -s 2 -v large


