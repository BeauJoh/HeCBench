CC        = clang++
OPTIMIZE  = yes
DEBUG     = no
DUMP      = yes
CUDA_ARCH = "--cuda-gpu-arch=sm_35"
GCC_TOOLCHAIN = "/auto/software/gcc/x86_64/gcc-9.1.0/"


# Standard flags
CFLAGS := -DUSE_GPU -std=c++14 -Wall -I../include \
          -fsycl -fsycl-targets=nvptx64-nvidia-cuda-sycldevice \
          -fsycl-unnamed-lambda \
          -Xsycl-target-backend $(CUDA_ARCH) \
          --gcc-toolchain=$(GCC_TOOLCHAIN)

# Linker flags
LDFLAGS = -lm


# Enable checksum and output file
ifeq ($(DEBUG),yes)
  CFLAGS += -g 
endif

# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

ifeq ($(DUMP),yes)
  CFLAGS += -DOUTPUT
endif

SRC = euler3d.cpp
EXE = euler3d

$(EXE):$(SRC) kernel_compute_flux.sycl  \
               kernel_compute_step_factor.sycl  \
	       kernel_initialize_variables.sycl \
	       kernel_memset.sycl \
	       kernel_time_step.sycl
	$(CC) $(CFLAGS) $(KERNEL_DIM) $(SRC) -o $(EXE) $(LDFLAGS)

run: $(EXE)
	./euler3d ../data/cfd/fvcorr.domn.097K 
	#./euler3d ../data/cfd/fvcorr.domn.193K   
	#./euler3d ../data/cfd/missile.domn.0.2M  

clean: 
	rm -f $(EXE) $(EXE).linkinfo result*  density momentum density_energy
