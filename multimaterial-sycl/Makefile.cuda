#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = clang++
OPTIMIZE  = yes
DEBUG     = no
CUDA_ARCH = "--cuda-gpu-arch=sm_60"
GCC_TOOLCHAIN = "/auto/software/gcc/x86_64/gcc-9.1.0/"

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := -DUSE_GPU -std=c++14 -Wall -I../include \
          -fsycl -fsycl-targets=nvptx64-nvidia-cuda-sycldevice \
          -fsycl-unnamed-lambda \
          -Xsycl-target-backend $(CUDA_ARCH) \
          --gcc-toolchain=$(GCC_TOOLCHAIN)

# Linker Flags
LDFLAGS = 

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g
  LDFLAGS  += -g
endif


# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

#===============================================================================
# Program name & source code list
#===============================================================================
program = multimat multimat_FL multimat_F

all: $(program)

source=compact.cpp full_matrix.cpp multimat.cpp

multimat: $(source)
	$(CC) $(CFLAGS) $^ -o $@ $(LDFLAGS)
multimat_F: $(source)
	$(CC) $(CFLAGS) -DFUSED $^ -o $@ $(LDFLAGS)
multimat_FL: $(source)
	$(CC) $(CFLAGS) -DFUSED -DLINKED $^ -o $@ $(LDFLAGS)

clean: 
	rm -rf $(program)

run: $(program)
	./multimat_FL 2000 2000
	./multimat_F 2000 2000
	./multimat 2000 2000
	./multimat_FL 2000 2000 0.3 0.05 0.05
	./multimat_F 2000 2000 0.3 0.05 0.05
	./multimat 2000 2000 0.3 0.05 0.05


