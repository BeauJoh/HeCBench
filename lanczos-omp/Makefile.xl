#===============================================================================
# User Options
#===============================================================================

# Compiler can be set below, or via environment variable
CC        = xlc++
OPTIMIZE  = yes
DEBUG     = no
DEVICE    = gpu
SM        = sm_70

#===============================================================================
# Program name & source code list
#===============================================================================

program = main

source = main.cpp lanczos.cpp

obj = $(source:.cpp=.o)

#===============================================================================
# Sets Flags
#===============================================================================

# Standard Flags
CFLAGS := -std=c++14 -Wall -I../include

# Linker Flags
LDFLAGS = 

# Debug Flags
ifeq ($(DEBUG),yes)
  CFLAGS += -g
  LDFLAGS  += -g
endif

# Optimization Flags
ifeq ($(OPTIMIZE),yes)
  CFLAGS += -O3
endif

ifeq ($(DEVICE),gpu)
  CFLAGS +=-qsmp -qoffload -qtgtarch=$(SM)
else
  CFLAGS +=-qopenmp
endif
#===============================================================================
# Targets to Build
#===============================================================================

$(program): $(obj)
	$(CC) $(CFLAGS) $(obj) -o $@ $(LDFLAGS)

%.o: %.cpp matrix.h graph_io.h linear_algebra.h \
          lanczos.h cycle_timer.h eigen.h utils.h
	$(CC) $(CFLAGS) -c $< -o $@

clean:
	rm -rf $(program) $(obj)

debug: $(program)
	./$(program) -g data/social-small.txt -n 100 -k 3 -d float

run: $(program)
	./$(program) -g data/social-large-800k.txt -n 800000 -k 3 -d float

